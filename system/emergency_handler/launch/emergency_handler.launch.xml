<launch>
  <arg name="input_autoware_state" default="/autoware/state" />
  <arg name="input_driving_capability" default="/autoware/driving_capability" />
  <!-- To be replaced by ControlCommand -->
  <arg name="input_prev_control_command" default="/control/vehicle_cmd" />
  <arg name="input_current_gate_mode" default="/control/current_gate_mode" />
  <arg name="input_twist" default="/localization/twist" />

  <arg name="output_control_command" default="/system/emergency/control_cmd" />
  <arg name="output_shift" default="/system/emergency/shift_cmd" />
  <arg name="output_turn_signal" default="/system/emergency/turn_signal_cmd" />
  <arg name="output_is_emergency" default="/system/emergency/is_emergency" />

  <arg name="config_file" default="$(find emergency_handler)/config/emergency_handler.yaml" />

  <node pkg="emergency_handler" type="emergency_handler" name="emergency_handler" output="screen">
    <remap from="~input/autoware_state" to="$(arg input_autoware_state)"/>
    <remap from="~input/driving_capability" to="$(arg input_driving_capability)"/>
    <remap from="~input/prev_control_command" to="$(arg input_prev_control_command)"/>
    <remap from="~input/current_gate_mode" to="$(arg input_current_gate_mode)"/>
    <remap from="~input/twist" to="$(arg input_twist)"/>

    <remap from="~output/control_command" to="$(arg output_control_command)"/>
    <remap from="~output/shift" to="$(arg output_shift)"/>
    <remap from="~output/turn_signal" to="$(arg output_turn_signal)"/>
    <remap from="~output/is_emergency" to="$(arg output_is_emergency)"/>

    <rosparam command="load" file="$(arg config_file)" />
  </node>
</launch>
