<launch>
  <arg name="adapter_output" default="screen" />
  <arg name="relay_output" default="log" />
  <arg name="status_pub_hz" default="5.0" />
  <arg name="stop_reason_timeout" default="0.5" />

  <arg name="input_steer" default="/vehicle/status/steering" />
  <arg name="input_vehicle_cmd" default="/control/vehicle_cmd" />
  <arg name="input_turn_signal" default="/vehicle/status/turn_signal" />
  <arg name="input_twist" default="/localization/twist" />
  <arg name="input_gear" default="/vehicle/status/shift" />
  <arg name="input_battery" default="/vehicle/status/battery_charge" />
  <arg name="input_nav_sat" default="/sensing/gnss/ublox/nav_sat_fix" />
  <arg name="input_autoware_state" default="/autoware/state" />
  <arg name="input_control_mode" default="/vehicle/status/control_mode" />
  <arg name="input_gate_mode" default="/control/current_gate_mode" />
  <arg name="input_is_emergency" default="/system/emergency/is_emergency" />
  <arg name="input_stop_reason" default="/planning/scenario_planning/status/stop_reasons" />
  <arg name="input_diagnostics" default="/diagnostics_agg" />
  <arg name="input_global_rpt" default="/pacmod/parsed_tx/global_rpt" />
  <arg name="input_lane_change_avaiable" default="/planning/scenario_planning/lane_driving/lane_change_available" />
  <arg name="input_lane_change_ready" default="/planning/scenario_planning/lane_driving/lane_change_ready" />
  <arg name="input_lane_change_candidate_path" default="/planning/scenario_planning/lane_driving/lane_change_candidate_path" />
  <arg name="input_obstacle_avoid_ready" default="/planning/scenario_planning/lane_driving/obstacle_avoidance_ready" />
  <arg name="input_obstacle_avoid_candidate_path" default="/planning/scenario_planning/lane_driving/obstacle_avoidance_candidate_trajectory" />
  <arg name="input_route" default="/planning/mission_planning/route" />
  <arg name="input_object" default="/perception/object_recognition/objects" />
  <arg name="input_traffic_light_state" default="/perception/traffic_light_recognition/traffic_light_states" />

  <arg name="output_vehicle_status" default="vehicle/get/status" />
  <arg name="output_autoware_status" default="autoware/get/status" />
  <arg name="output_lane_change_status" default="lane_change/get/status" />
  <arg name="output_obstacle_avoid_status" default="object_avoidance/get/status" />
  <arg name="output_max_velocity" default="/planning/scenario_planning/max_velocity" />
  <arg name="output_gate_mode" default="/remote/gate_mode_cmd" />
  <arg name="output_emergency" default="/remote/emergency" />
  <arg name="output_autoware_engage" default="/autoware/engage" />
  <arg name="output_vehicle_engage" default="/vehicle/engage" />
  <arg name="output_route" default="/planning/mission_planning/route" />
  <arg name="output_lane_change_approval" default="/planning/scenario_planning/lane_driving/lane_change_approval" />
  <arg name="output_force_lane_change" default="/planning/scenario_planning/lane_driving/force_lane_change" />
  <arg name="output_obstacle_avoid_approval" default="/planning/scenario_planning/lane_driving/obstacle_avoidance_approval" />
  <arg name="output_force_obstacle_avoid" default="tmp" /> <!-- not implemented -->
  <arg name="output_overwrite_traffic_light_state" default="tmp" /> <!-- not implemented -->

  <arg name="param_emergency_handling" default="/control/vehicle_cmd_gate/use_emergency_handling" />

  <arg name="set_upper_velocity" default="vehicle/put/velocity" />
  <arg name="set_gate_mode" default="autoware/put/gate_mode" />
  <arg name="set_emergency" default="autoware/put/emergency" />
  <arg name="set_engage" default="autoware/put/engage" />
  <arg name="set_route" default="autoware/put/route" />
  <arg name="set_lane_change_approval" default="lane_change/put/approval" />
  <arg name="set_force_lane_change" default="lane_change/put/force" />
  <arg name="set_obstacle_avoid_approval" default="object_avoidance/put/approval" />
  <arg name="set_force_obstacle_avoid" default="object_avoidance/put/force" />
  <arg name="set_overwrite_traffic_light_state" default="traffic_light/put/traffic_light" />

  <arg name="get_route" default="autoware/get/route" />
  <arg name="get_predicted_object" default="prediction/get/objects" />


  <group ns="awapi">
    <node pkg="awapi_awiv_adapter" type="awapi_awiv_adapter" name="awapi_awiv_adapter" output="$(arg adapter_output)">
      <remap from="~input/steer" to="$(arg input_steer)" />
      <remap from="~input/vehicle_cmd" to="$(arg input_vehicle_cmd)" />
      <remap from="~input/turn_signal" to="$(arg input_turn_signal)" />
      <remap from="~input/twist" to="$(arg input_twist)" />
      <remap from="~input/gear" to="$(arg input_gear)" />
      <remap from="~input/battery" to="$(arg input_battery)" />
      <remap from="~input/nav_sat" to="$(arg input_nav_sat)" />
      <remap from="~input/autoware_state" to="$(arg input_autoware_state)" />
      <remap from="~input/control_mode" to="$(arg input_control_mode)" />
      <remap from="~input/gate_mode" to="$(arg input_gate_mode)" />
      <remap from="~input/is_emergency" to="$(arg input_is_emergency)" />
      <remap from="~input/stop_reason" to="$(arg input_stop_reason)" />
      <remap from="~input/diagnostics" to="$(arg input_diagnostics)" />
      <remap from="~input/global_rpt" to="$(arg input_global_rpt)" />
      <remap from="~input/lane_change_avaiable" to="$(arg input_lane_change_avaiable)" />
      <remap from="~input/lane_change_ready" to="$(arg input_lane_change_ready)" />
      <remap from="~input/lane_change_candidate_path" to="$(arg input_lane_change_candidate_path)" />
      <remap from="~input/obstacle_avoid_ready" to="$(arg input_obstacle_avoid_ready)" />
      <remap from="~input/obstacle_avoid_candidate_path" to="$(arg input_obstacle_avoid_candidate_path)" />
      <remap from="~output/vehicle_status" to="$(arg output_vehicle_status)" />
      <remap from="~output/autoware_status" to="$(arg output_autoware_status)" />
      <remap from="~output/lane_change_status" to="$(arg output_lane_change_status)" />
      <remap from="~output/obstacle_avoid_status" to="$(arg output_obstacle_avoid_status)" />
      <remap from="~param/emergency_handling" to="$(arg param_emergency_handling)" />
      <param name="status_pub_hz" value="$(arg status_pub_hz)" />
    </node>

    <!-- relay get topic -->
    <node pkg="topic_tools" type="relay" name="route_relay" args="$(arg input_route) $(arg get_route)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="predict_object_relay" args="$(arg input_object) $(arg get_predicted_object)" output="$(arg relay_output)" />

    <!-- relay put topic -->
    <node pkg="topic_tools" type="relay" name="upper_vel_relay" args="$(arg set_upper_velocity) $(arg output_max_velocity)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="gate_mode_relay" args="$(arg set_gate_mode) $(arg output_gate_mode)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="emergency_relay" args="$(arg set_emergency) $(arg output_emergency)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="autoware_engage_relay" args="$(arg set_engage) $(arg output_autoware_engage)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="vehicle_engage_relay" args="$(arg set_engage) $(arg output_vehicle_engage)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="put_route_relay" args="$(arg set_route) $(arg output_route)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="lane_change_approval_relay" args="$(arg set_lane_change_approval) $(arg output_lane_change_approval)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="force_lane_change_relay" args="$(arg set_force_lane_change) $(arg output_force_lane_change)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="obstacle_avoid_approval_relay" args="$(arg set_obstacle_avoid_approval) $(arg output_obstacle_avoid_approval)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="force_obstacle_avoid_relay" args="$(arg set_force_obstacle_avoid) $(arg output_force_obstacle_avoid)" output="$(arg relay_output)" />
    <node pkg="topic_tools" type="relay" name="overwrite_traffic_light_state_relay" args="$(arg set_overwrite_traffic_light_state) $(arg output_overwrite_traffic_light_state)" output="$(arg relay_output)" />

  </group>

</launch>
